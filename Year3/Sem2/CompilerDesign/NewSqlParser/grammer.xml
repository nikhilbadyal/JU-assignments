<structure>
    <type>grammar</type>
    <!--The LIST of productions.-->
    <production>
        <left>PARSEQUERY</left>
        <right>SQLSTATEMENTS</right>
    </production>
    <production>
        <left>PARSEQUERY</left>
        <right/>
    </production>
    <production>
        <left>SQLSTATEMENTS</left>
        <right>SQLSTATEMENT SQLSTATEMENTS</right>
    </production>
    <production>
        <left>SQLSTATEMENTS</left>
        <right/>
    </production>
    <production>
        <left>SQLSTATEMENT</left>
        <right>DDLSTATEMENT</right>
    </production>
    <production>
        <left>SQLSTATEMENT</left>
        <right>DMLSTATEMENT</right>
    </production>
    <production>
        <left>DDLSTATEMENT</left>
        <right>createDatabase</right>
    </production>
    <production>
        <left>DDLSTATEMENT</left>
        <right>createTable</right>
    </production>
    <production>
        <left>DMLSTATEMENT</left>
        <right>SELECT</right>
    </production>
    <production>
        <left>DMLSTATEMENT</left>
        <right>INSERT</right>
    </production>
    <production>
        <left>createDatabase</left>
        <right>create DBFORMAT IFNOTEXIST UID semi_colon</right>
    </production>
    <production>
        <left>DBFORMAT</left>
        <right>database</right>
    </production>
    <production>
        <left>DBFORMAT</left>
        <right>schema</right>
    </production>
    <production>
        <left>IFNOTEXIST</left>
        <right>IF NOT EXISTS</right>
    </production>
    <production>
        <left>IFNOTEXIST</left>
        <right/>
    </production>
    <production>
        <left>createTable</left>
        <right>CREATE TEMPORARY TABLE IFNOTEXIST UID CREATEDEFINATIONS semi_colon</right>
    </production>
    <production>
        <left>TEMPORARY</left>
        <right>temperory</right>
    </production>
    <production>
        <left>temperory</left>
        <right/>
    </production>
    <production>
        <left>CREATEDEFINATIONS</left>
        <right>( CREATEDEFINATION CREATEDEFINATIONS )</right>
    </production>
    <production>
        <left>CREATEDEFINATIONS</left>
        <right>, CREATEDEFINATION CREATEDEFINATIONS</right>
    </production>
    <production>
        <left>CREATEDEFINATIONS</left>
        <right/>
    </production>
    <production>
        <left>CREATEDEFINATION</left>
        <right>UID DATATYPES</right>
    </production>
    <production>
        <left>CREATEDEFINATION</left>
        <right>TABLEOPTIONS</right>
    </production>
    <production>
        <left>DATATYPE</left>
        <right>int</right>
    </production>
    <production>
        <left>DATATYPE</left>
        <right>char</right>
    </production>
    <production>
        <left>DATATYPE</left>
        <right>varchar</right>
    </production>
    <production>
        <left>DATATYPE</left>
        <right>text</right>
    </production>
    <production>
        <left>DATATYPE</left>
        <right>bool</right>
    </production>
    <production>
        <left>TABLEOPTIONS</left>
        <right>primary key LIST</right>
    </production>
    <production>
        <left>TABLEOPTIONS</left>
        <right>foreign key LIST</right>
    </production>
    <production>
        <left>SELECT</left>
        <right>SELECTQUERY</right>
    </production>
    <production>
        <left>SELECTQUERY</left>
        <right>select SELECTELEMENTS FROMCLAUSE LIMITCLAUSE semi_colon</right>
    </production>
    <production>
        <left>SELECTELEMENTS</left>
        <right>*</right>
    </production>
    <production>
        <left>SELECTELEMENTS</left>
        <right>LIST</right>
    </production>
    <production>
        <left>SELECTELEMENTS</left>
        <right/>
    </production>
    <production>
        <left>FROMCLAUSE</left>
        <right>from UID WHERECLAUSE</right>
    </production>
    <production>
        <left>WHERECLAUSE</left>
        <right>where EXPRESSION</right>
    </production>
    <production>
        <left>WHERECLAUSE</left>
        <right/>
    </production>
    <production>
        <left>LIMITCLAUSE</left>
        <right>limit UID</right>
    </production>
    <production>
        <left>WHERECLAUSE</left>
        <right/>
    </production>
    <production>
        <left>INSERT</left>
        <right>insert INTO UID INSERTOPT semi_colon</right>
    </production>
    <production>
        <left>INTO</left>
        <right>into</right>
    </production>
    <production>
        <left>INTO</left>
        <right/>
    </production>
    <production>
        <left>INSERTOPT</left>
        <right>LIST INSERTOPT</right>
    </production>
    <production>
        <left>INSERTOPT</left>
        <right>values LIST</right>
    </production>
    <production>
        <left>INSERTOPT</left>
        <right/>
    </production>
    <production>
        <left>LIST</left>
        <right>( UID LIST )</right>
    </production>
    <production>
        <left>LIST</left>
        <right>UID LIST</right>
    </production>
    <production>
        <left>LIST</left>
        <right>, UID</right>
    </production>
    <production>
        <left>LIST</left>
        <right/>
    </production>
    <production>
        <left>EXPRESSION</left>
        <right>PREDICATE</right>
    </production>
    <production>
        <left>PREDICATE</left>
        <right>PREDICATE LOGICALOPR LIST</right>
    </production>
    <production>
        <left>PREDICATE</left>
        <right>PREDICATE LOGICALOPR LIST</right>
    </production>
    <production>
        <left>PREDICATE</left>
        <right>PREDICATE LOGICALOPR PREDICATE LOGICALOPR PREDICATE</right>
    </production>
    <production>
        <left>PREDICATE</left>
        <right>PREDICATE LOGICALOPR PREDICATE</right>
    </production>
    <production>
        <left>LOGICALOPR</left>
        <right>not LOGICALOPR</right>
    </production>
    <production>
        <left>LOGICALOPR</left>
        <right>in</right>
    </production>
    <production>
        <left>LOGICALOPR</left>
        <right>between</right>
    </production>
    <production>
        <left>LOGICALOPR</left>
        <right>like</right>
    </production>
    <production>
        <left>LOGICALOPR</left>
        <right>and</right>
    </production>
    <production>
        <left>atomicVal</left>
        <right>UID</right>
    </production>
    <production>
        <left>UID</left>
        <right>string</right>
    </production>
    <production>
        <left>UID</left>
        <right>number</right>
    </production>
    <production>
        <left>UID</left>
        <right>_</right>
    </production>
    <production>
        <left>UID</left>
        <right>'</right>
    </production>
    <production>
        <left>UID</left>
        <right/>
    </production>
    <production>
        <left>comparisonOpr</left>
        <right>=</right>
    </production>
    <production>
        <left>comparisonOpr</left>
        <right>LessT</right>
    </production>
    <production>
        <left>comparisonOpr</left>
        <right>greatert</right>
    </production>
    <production>
        <left>comparisonOpr</left>
        <right>le</right>
    </production>
    <production>
        <left>comparisonOpr</left>
        <right>ge</right>
    </production>
</structure>