 /*return Scaffold(
      body: Stack(
        children: <Widget>[
          AnimatedContainer(
            curve: Curves.fastLinearToSlowEaseIn,
            duration: const const Duration(milliseconds: 1000),
            color: _backgroundColor,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              children: <Widget>[
                GestureDetector(
                  onTap: () {
                    setState(() {
                      _pageState = 0;
                    });
                  },
                  child: SizedBox(
                    child: Center(
                      child: Column(
                        children: <Widget>[
                          AnimatedContainer(
                            curve: Curves.fastLinearToSlowEaseIn,
                            duration: const const Duration(milliseconds: 1000),
                            margin: EdgeInsets.only(
                              top: _headingTop,
                            ),
                            child: Text(
                              'Keep Notes',
                              style: TextStyle(
                                  color: _headingColor,
                                  fontWeight: FontWeight.bold,
                                  fontSize: 28),
                            ),
                          ),
                          Container(
                            margin: const EdgeInsets.all(5),
                            padding: const EdgeInsets.only(
                                left: 32, right: 32, bottom: 32),
                            child: Text(
                              'We keep you safe. ',
                              textAlign: TextAlign.center,
                              style:
                                  TextStyle(color: _headingColor, fontSize: 16),
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
                Container(
                  padding: const EdgeInsets.symmetric(horizontal: 32),
                  child: Center(
                    child: Image.asset('assets/images/splash_bg.png'),
                  ),
                ),
                Align(
                  alignment: Alignment.bottomLeft,
                  child: SizedBox(
                    child: GestureDetector(
                      onTap: () {
                        setState(() {
                          if (_pageState != 0) {
                            _pageState = 0;
                          } else {
                            _pageState = 1;
                          }
                        });
                      },
                      child: Container(
                        margin: const EdgeInsets.all(32),
                        padding: const EdgeInsets.all(20),
                        width: double.infinity,
                        decoration: BoxDecoration(
                            color: Theme.of(context).accentColor,
                            borderRadius: BorderRadius.circular(50)),
                        child: const Center(
                          child: Text(
                            'Get Started',
                            style: TextStyle(color: Colors.white, fontSize: 16),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
          AnimatedContainer(
            padding: const EdgeInsets.all(32),
            width: _loginWidth,
            height: _loginHeight,
            curve: Curves.fastLinearToSlowEaseIn,
            duration: const const Duration(milliseconds: 1000),
            transform:
                Matrix4.translationValues(_loginXOffset, _loginYOffset, 1),
            decoration: BoxDecoration(
              color: Theme.of(context).canvasColor.withOpacity(
                    _loginOpacity,
                  ),
              borderRadius: const BorderRadius.only(
                topLeft: Radius.circular(25),
                topRight: Radius.circular(25),
              ),
            ),
            child: Form(
              key: loginKey,
              child: SingleChildScrollView(
                child: Wrap(
                  alignment: WrapAlignment.spaceBetween,
                  // mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: <Widget>[
                    Column(
                      children: <Widget>[
                        Container(
                          margin: const EdgeInsets.only(bottom: 20),
                          child: const Text(
                            'Login To Continue',
                            style: TextStyle(fontSize: 20),
                          ),
                        ),
                        InputWithIcon(
                          icon: Icons.email,
                          hint: 'Enter Email...',
                          textFormField: TextFormField(
                            autovalidateMode:
                                AutovalidateMode.onUserInteraction,
                            onSaved: (val) {
                              user.email = val ?? '';
                            },
                            validator: Validators.compose([
                              Validators.email('Invalid Email'),
                              Validators.required('* Required'),
                            ]),
                            textAlign: TextAlign.left,
                            decoration: InputDecoration(
                              border: InputBorder.none,
                              hintText: 'example@domain.com',
                              hintStyle: TextStyle(
                                color: Colors.grey[500] ?? Colors.grey,
                              ),
                            ),
                          ),
                        ),
                        const SizedBox(
                          height: 20,
                        ),
                        InputWithIcon(
                          icon: Icons.vpn_key,
                          hint: 'Enter Password...',
                          textFormField: TextFormField(
                            autovalidateMode:
                                AutovalidateMode.onUserInteraction,
                            onSaved: (val) {
                              user.password = val ?? '';
                            },
                            validator: Validators.compose([
                              Validators.required('* Required'),
                              Validators.patternRegExp(
                                  RegExp(passwordRegEx()),
                                  'Please meet the following criteria\n'
                                  '8 characters length\n'
                                  '2 letters in Upper Case\n'
                                  '1 Special Character\n'
                                  '2 numerals (0-9)\n'
                                  '3 letters in Lower Case\n')
                            ]),
                            // NIkhi@12
                            obscureText: true,
                            textAlign: TextAlign.left,
                            decoration: InputDecoration(
                              border: InputBorder.none,
                              hintText: '*********',
                              hintStyle: TextStyle(
                                color: Colors.grey[500] ?? Colors.grey,
                              ),
                            ),
                          ),
                        )
                      ],
                    ),
                    const SizedBox(
                      height: 200,
                    ),
                    Column(
                      children: <Widget>[
                        GestureDetector(
                          onTap: () async {
                            if (loginKey.currentState!.validate()) {
                              loginKey.currentState?.save();
                              final response = await Provider.of<Auth>(
                                context,
                                listen: false,
                              ).signInWithPassword(
                                email: user.email,
                                password: user.password,
                              );
                              if (Provider.of<Auth>(
                                context,
                                listen: false,
                              ).isLoggedIn) {
                                await navigate('/login', context, '/');
                              } else {
                                handleError(
                                  response,
                                  context,
                                );
                              }
                            } else {
                              Utilities.showSnackbar(
                                  context, 'Please see errors above');
                            }
                          },
                          child: const PrimaryButton(
                            btnText: 'Login',
                          ),
                        ),
                        const SizedBox(
                          height: 20,
                        ),
                        OutlineBtn(
                          btnText: 'Create New Account',
                          onTap: () {
                            debugPrint('tapped');
                            setState(() {
                              _pageState = 2;
                            });
                          },
                        )
                      ],
                    ),
                  ],
                ),
              ),
            ),
          ),
          AnimatedContainer(
            height: _registerHeight,
            padding: const EdgeInsets.all(32),
            curve: Curves.fastLinearToSlowEaseIn,
            duration: const const Duration(milliseconds: 1000),
            transform: Matrix4.translationValues(0, _registerYOffset, 1),
            decoration: BoxDecoration(
              color: Theme.of(context).canvasColor,
              borderRadius: const BorderRadius.only(
                topLeft: Radius.circular(25),
                topRight: Radius.circular(
                  25,
                ),
              ),
            ),
            child: Form(
              key: signupKey,
              child: SingleChildScrollView(
                child: Wrap(
                  alignment: WrapAlignment.spaceBetween,
                  // mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: <Widget>[
                    Column(
                      children: <Widget>[
                        Container(
                          margin: const EdgeInsets.only(bottom: 20),
                          child: const Text(
                            'Create a New Account',
                            style: TextStyle(fontSize: 20),
                          ),
                        ),
                        InputWithIcon(
                          icon: Icons.email,
                          hint: 'Enter Email...',
                          textFormField: TextFormField(
                            autovalidateMode:
                                AutovalidateMode.onUserInteraction,
                            onSaved: (val) {
                              user.email = val ?? '';
                            },
                            validator: Validators.compose([
                              Validators.email('Invalid Email'),
                              Validators.required('* Required'),
                            ]),
                            textAlign: TextAlign.left,
                            decoration: InputDecoration(
                              border: InputBorder.none,
                              hintText: 'example@domain.com',
                              hintStyle: TextStyle(
                                color: Colors.grey[500] ?? Colors.grey,
                              ),
                            ),
                          ),
                        ),
                        const SizedBox(
                          height: 20,
                        ),
                        InputWithIcon(
                          icon: Icons.vpn_key,
                          hint: 'Enter Password...',
                          textFormField: TextFormField(
                            autovalidateMode:
                                AutovalidateMode.onUserInteraction,
                            onSaved: (val) {
                              user.password = val ?? '';
                            },
                            validator: Validators.compose([
                              Validators.required('* Required'),
                              Validators.patternRegExp(
                                  RegExp(passwordRegEx()),
                                  'Please meet the following criteria\n'
                                  '8 characters length\n'
                                  '2 letters in Upper Case\n'
                                  '1 Special Character\n'
                                  '2 numerals (0-9)\n'
                                  '3 letters in Lower Case\n')
                            ]),
                            // NIkhi@12
                            obscureText: true,
                            textAlign: TextAlign.left,
                            decoration: InputDecoration(
                              border: InputBorder.none,
                              hintText: '*********',
                              hintStyle: TextStyle(
                                color: Colors.grey[500] ?? Colors.grey,
                              ),
                            ),
                          ),
                        )
                      ],
                    ),
                    const SizedBox(
                      height: 200,
                    ),
                    Column(
                      children: <Widget>[
                        GestureDetector(
                          onTap: () async {
                            if (signupKey.currentState?.validate() ?? false) {
                              signupKey.currentState?.save();
                              final response = await Provider.of<Auth>(
                                context,
                                listen: false,
                              ).singUp(
                                email: user.email,
                                password: user.password,
                              );

                              if (response == 'success') {
                                Utilities.showSnackbar(
                                    context,
                                    'Registration '
                                    'successful. Please check your '
                                    'email to confirm your account');
                                setState(() {
                                  _pageState = 1;
                                });
                              } else {
                                handleError(
                                  response,
                                  context,
                                );
                              }
                            } else {
                              Utilities.showSnackbar(
                                  context, 'Please see errors above');
                            }
                          },
                          child: const PrimaryButton(
                            btnText: 'Create Account',
                          ),
                        ),
                        const SizedBox(
                          height: 20,
                        ),
                        OutlineBtn(
                          btnText: 'Back To Login',
                          onTap: () {
                            setState(() {
                              _pageState = 1;
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          )
        ],
      ),
    );*/